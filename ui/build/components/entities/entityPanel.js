"use strict";Object.defineProperty(exports,"__esModule",{value:true});var entityPanel=React.createClass({displayName:"entityPanel",getInitialState:function getInitialState(){var details="hide";var displayBehaviors=this.props.displayType||"flat";return{behaviors:null,displayBehaviors:displayBehaviors,details:details}},displayBehaviorsSelection:function displayBehaviorsSelection(displayBehaviors){this.setState({displayBehaviors:displayBehaviors});this.generateTabs(displayBehaviors)},handleDetailSelection:function handleDetailSelection(details){this.setState({details:details})},handleSettings:function handleSettings(param){if(param.type=="flat"){var details=new Map;details.set("show",{name:"Expanded"});details.set("hide",{name:"Collapsed"});var detailsData={"title":"Details","list":details,"selected":this.state.details};var displayBehaviors=new Map;displayBehaviors.set("flat",{name:"Flat"});displayBehaviors.set("grouped",{name:"Grouped"});var displayBehaviorsData={"title":"Show behaviors","list":displayBehaviors,"selected":this.state.displayBehaviors};return React.createElement("div",{className:"list-manager"},React.createElement("ul",{className:"list"},React.createElement("li",{className:"item"},React.createElement(MenuSelector,{data:displayBehaviorsData,onSelect:this.displayBehaviorsSelection})),React.createElement("li",{className:"item"},React.createElement(MenuSelector,{data:detailsData,onSelect:this.handleDetailSelection}))))}else{return React.createElement("div",{className:"list-manager"},React.createElement("ul",{className:"list"},React.createElement("li",{className:"item"},"TODO: Fix this!")))}},generateTabs:function generateTabs(displayType){var _this=this;var e=this.props.data.entity;var bId=this.props.data.behavior?this.props.data.behavior.id:null;if(e){(function(){var comps={};var behaviorAction=displayType=="flat"?"listAllBehaviors":"listAllBehaviorGroups";var behaviors=e.execute(behaviorAction,bId);behaviors.forEach(function(behavior,behaviorId){var behaviorPresenters=behavior.execute("getReference","list<behaviorPresenter>");var url="/ui/build/components/behaviors/notFound.js";if(behaviorPresenters){var behaviorPresenter=behaviorPresenters.execute("getReference","behaviorPresenter");var behaviorPresenterUrl=behaviorPresenter.execute("getReference","url");url=behaviorPresenterUrl.entity.id}comps[behaviorId]={url:url,behavior:behavior}});var self=_this;ServiceApi.getComponents(comps,function(behaviorPresenters){self.setState({"behaviors":behaviorPresenters})})})()}},componentWillMount:function componentWillMount(){this.generateTabs(this.state.displayBehaviors)},formatName:function formatName(entity){return entity.execute("getName")||React.createElement("i",null,"< ",entity.id," > ")},render:function render(){if(this.state.behaviors){var tabPanels=[];for(var bId in this.state.behaviors){var b=this.state.behaviors[bId];var bName=this.formatName(b.behavior);b.component.props={"label":bName,"key":bId,"router":this.props.router,"data":{entity:this.props.data.entity,behavior:b.behavior,"details":this.state.details},"edit":this.state.editMode};tabPanels.push(b.component)}var tabsStyle=this.props.tabsStyle?this.props.tabsStyle:"min-tabs";return React.createElement(Tabs,{key:this.state.displayBehaviors,name:tabsStyle,type:this.state.displayBehaviors,getSettings:this.handleSettings},tabPanels)}return null}});exports.default=entityPanel;